#include<stdio.h>

int main()
{
    int frames[3], pages[20], i, j, k, count = 0, fault = 0, n, m, flag = 0;
    
    printf("Enter the number of page frames: ");
    scanf("%d", &n);
    
    printf("Enter the page reference sequence: ");
    for(i=0; i<20; i++)
        scanf("%d", &pages[i]);
    
    for(i=0; i<n; i++)
        frames[i] = -1;
    
    for(i=0; i<20; i++)
    {
        flag = 0;
        for(j=0; j<n; j++)
        {
            if(frames[j] == pages[i])
            {
                flag = 1;
                break;
            }
        }
        
        if(flag == 0)
        {
            if(count < n)
            {
                frames[count] = pages[i];
                count++;
            }
            else
            {
                int index = -1;
                for(j=0; j<n; j++)
                {
                    int f = 0;
                    for(k=i-1; k<20 && k>=0 && k>=i-n; k--)
                    {
                        if(frames[j] == pages[k])
                        {
                            f = 1;
                            if(index == -1)
                                index = j;
                            else if(k < m)
                            {
                                index = j;
                                m = k;
                            }
                            break;
                        }
                    }
                    if(f == 0)
                    {
                        index = j;
                        break;
                    }
                }
                frames[index] = pages[i];
                fault++;
            }
        }
        
        printf("\n");
        for(j=0; j<n; j++)
            printf("%d\t", frames[j]);
    }
    
    printf("\n\nTotal number of page faults: %d", fault);
    return 0;
}
7th que
well you can still do your own code if possible
8th question ðŸ‘€
#include<stdio.h>
#include<stdlib.h>

int main()
{
    int n, head, i, j, total_movement = 0;

    printf("Enter the number of tracks: ");
    scanf("%d", &n);

    int tracks[n];

    printf("Enter the track positions:\n");

    for(i=0;i<n;i++)
        scanf("%d", &tracks[i]);

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    // Add the head movement to the total movement
    total_movement += abs(head - tracks[0]);

    // Move the head to the first track
    head = tracks[0];

    // Calculate the total head movement by moving the head to all tracks in FCFS order
    for(i=1;i<n;i++)
    {
        total_movement += abs(head - tracks[i]);
        head = tracks[i];
    }

    printf("Total head movement = %d\n", total_movement)â€¦
#include <stdio.h>

int main()
{
    int n = 3;
    int arrival_time[n], burst_time[n], waiting_time[n], turnaround_time[n];
    int i, j;

    float avg_waiting_time = 0, avg_turnaround_time = 0;

    
    for(i = 0; i < n; i++)
    {
        printf("Enter arrival time and burst time for process %d: ", i);
        scanf("%d %d", &arrival_time[i], &burst_time[i]);
    }

    
    waiting_time[0] = 0;
    turnaround_time[0] = burst_time[0];

    for(i = 1; i < n; i++)
    {
        waiting_time[i] = turnaround_time[i-1] - arrival_time[i];
        turnaround_time[i] = waiting_time[i] + burst_time[i];

        if(waiting_time[i] < 0)
        {
            waiting_time[i] = 0;
        }
    }

    
    for(i = 0; i < n; i++)
    {
        avg_waiting_time += waiting_time[i];
        avg_turnaround_time += turnaround_time[i];
    }

    avg_waiting_time /= n;
    avg_turnaround_time /= n;

    
    printf("\nProcess\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");

    for(i = 0; i < n; i++)
    {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", i, arrival_time[i], burst_time[i], waiting_time[i], turnaround_time[i]);
    }

    printf("\nAverage Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);

    return 0;
}
